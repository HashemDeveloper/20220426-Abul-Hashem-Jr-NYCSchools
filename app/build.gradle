plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}
android {
    compileSdk 31

    defaultConfig {
        applicationId "com.chase.interview.project"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = java_version
    }
    dataBinding.enabled = true
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    // multidex
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodel_lifecycle"
    implementation 'androidx.preference:preference-ktx:1.2.0'

    implementation "com.google.android.material:material:$materialDesignVersion"
    implementation "androidx.legacy:legacy-support-core-utils:$designSupportLib"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    //dagger
    implementation "com.google.dagger:dagger-android:$daggerVersion" // core version
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    // if you use the support libraries, android version
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Room Database
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    annotationProcessor("androidx.room:room-compiler:$room_version")
    implementation "androidx.room:room-ktx:$room_version"


    // Kotlin coroutine dependencies
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // Test helpers
    androidTestImplementation 'androidx.test:runner:1.4.0'
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "org.hamcrest:hamcrest-library:$hamcrest_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"


    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$viewmodel_lifecycle"


    //Coroutines scopes: ViewModelScope, LifecycleScope and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodel_lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$viewmodel_lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$viewmodel_lifecycle"

    // glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "jp.wasabeef:glide-transformations:$glideTransformationVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation('com.github.bumptech.glide:okhttp3-integration:4.13.0') {
        exclude group: 'glide-parent'
    }

    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //preferences for settings
    implementation "androidx.preference:preference-ktx:$prefernce_version"
    //event bus
    implementation "org.greenrobot:eventbus:$event_bus_v"
    // circular image
    implementation "de.hdodenhof:circleimageview:$circularImage"
    //multiDex
    implementation "androidx.multidex:multidex:$multidex_version"
    // Tools
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "com.facebook.stetho:stetho:$stetho"
    implementation "com.facebook.stetho:stetho-okhttp3:$stetho"
    implementation "com.airbnb.android:lottie:$lottieVersion"
    // dagger assisted injection
    compileOnly("com.squareup.inject:assisted-inject-annotations-dagger2:0.3.3")
    kapt("com.squareup.inject:assisted-inject-processor-dagger2:0.3.3")
    //threeten
    implementation "com.jakewharton.threetenabp:threetenabp:$threeTenAbpVersion"
    //worker manager
    // Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:$work_version")
    androidTestImplementation("androidx.work:work-testing:$work_version")
}